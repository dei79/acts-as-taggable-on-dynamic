require "spec_helper"

describe Location do
  before(:each) do
    @location = Location.new()
  end

  after(:each) do
    @location.destroy
  end

  describe "dynamic_tag_context_attribute" do
    it "should be generated by context name" do
      @location.dynamic_tag_context_attribute("skills").should eql("dynamic_tag_context_skill_list")
    end

    it "should be check a give attribute" do
      @location.dynamic_tag_context_attribute?("dynamic_tag_context_skill_list").should be_true
    end

    it "should return the right context" do
      @location.dynamic_tag_context_from_attribute("dynamic_tag_context_skill_list").should eql("skills")
    end
  end

  describe "Dynamic Attributes Engine" do

    it "should respond to dynamic_tag_context attributes" do
      @location.respond_to?("dynamic_tag_context_skill_list=").should be_true
      @location.respond_to?("dynamic_tag_context_skill_list").should be_true
    end

    it "should respond to tag_list attributes" do
      @location.respond_to?("skill_list").should be_true
      @location.respond_to?("skill_list=").should be_true
    end

    it "should handle symbols as method_names correct" do
      @location.respond_to?(:not_existing_attribute_symbol).should be_false
      @location.respond_to?(:dynamic_tag_context_skill_list=).should be_true
      @location.respond_to?(:dynamic_tag_context_skill_list).should be_true
      @location.respond_to?(:skill_list).should be_true
      @location.respond_to?(:skill_list=).should be_true
    end


    it "should implement a valid tag setter" do
      values = ["Value1", "Value2", "Value3"]

      # skills
      @location.dynamic_tag_context_skill_list= values
      @location.save!
      @location.dynamic_tag_context_skill_list.should eql(values.join(',').chomp(','))
      @location.skill_list.should eql(values.join(',').chomp(','))
      Location.tagged_with('Value1', :on => :skills).should include(@location)

      # locations
      @location.dynamic_tag_context_location_list= values
      @location.save!
      @location.dynamic_tag_context_location_list.should eql(values.join(',').chomp(','))
      @location.location_list.should eql(values.join(',').chomp(','))
      Location.tagged_with('Value1', :on => :locations).should include(@location)
    end
  end

  describe "Mass Assignment Security" do
    it "should authorizes dynamic tags" do
      @location.mass_assignment_authorizer(:default).deny?("dynamic_tag_context_skill_list").should be_false
      @location.mass_assignment_authorizer(:default).deny?("skill_list").should be_false
    end

  end
end